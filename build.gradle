plugins {
	id 'idea'
	id 'net.minecraftforge.gradle'
	id 'org.spongepowered.mixin'
	id 'org.parchmentmc.librarian.forgegradle'
	id 'maven-publish'
}

archivesBaseName = project.mod_name
version = project.mod_version + "+" + project.version_meta
group = project.maven_group

jarJar.enable()

java.toolchain.languageVersion = JavaLanguageVersion.of(17)
println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"

configurations {
	library
	implementation.extendsFrom(library)
}

minecraft {
	mappings channel: 'parchment', version: "${parchment_version}-${minecraft_version}"

	accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

	runs {

		all {
			lazyToken('minecraft_classpath') {
				configurations.library.copyRecursive().resolve().collect {
					it.absolutePath
				}.join(File.pathSeparator)
			}
		}

		client {
			workingDirectory project.file('run')

			arg "-mixin.config=${project.mod_id}.mixins.json"

			property 'forge.logging.markers', 'REGISTRIES'

			property 'forge.logging.console.level', 'debug'

			property 'forge.enabledGameTestNamespaces', project.mod_id

			mods {
				"${project.mod_id}" {
					source sourceSets.main
				}
			}
		}

		server {

			property 'forge.enabledGameTestNamespaces', project.mod_id

			mods {
				"${project.mod_id}" {
					source sourceSets.main
				}
			}
		}

		data {
			workingDirectory project.file('run')

			property 'forge.logging.markers', 'REGISTRIES'

			property 'forge.logging.console.level', 'debug'

			args '--mod', project.mod_id,
				'--all', '--output', file('src/generated/resources/'),
				'--existing', file('src/main/resources/')

			mods {
				"${project.mod_id}" {
					source sourceSets.main
				}
			}
		}

	}
}

repositories {
	maven {
		name 'Progwml6 Maven'
		url 'https://dvs1.progwml6.com/files/maven'
	}
	maven {
		name "JitPack"
		url 'https://jitpack.io'
	}
}

dependencies {
	minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

	jarJar(group: 'com.github.LlamaLad7', name: "MixinExtras", version: "[${mixin_extras_version},)") {
		transitive = false
		jarJar.pin(it, project.mixin_extras_version)
	}

	compileOnly fg.deobf("mezz.jei:jei-${jei_minecraft_version}:${jei_version}:api")
	implementation fg.deobf("mezz.jei:jei-${jei_minecraft_version}:${jei_version}")

	library "com.github.LlamaLad7:MixinExtras:${mixin_extras_version}"
	annotationProcessor "com.github.LlamaLad7:MixinExtras:${mixin_extras_version}"
	annotationProcessor "org.spongepowered:mixin:${mixin_version}:processor"
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

mixin {
	add sourceSets.main, "${mod_id}.refmap.json"
	config "${mod_id}.mixins.json"

	debug.verbose = true
	debug.export = true
}

java {
	withSourcesJar()
}

processResources {
	inputs.property "version", project.mod_version

	filesMatching("META-INF/mods.toml") {
		expand "version": project.mod_version
	}
}

jar {
	classifier 'slim'
	from("LICENSE") {
		rename {
			"${it}_" + project.archivesBaseName.toUpperCase(Locale.ROOT)
		}
	}
	manifest {
        attributes([
                "Specification-Title"     : "${mod_name}",
                "Specification-Vendor"    : "Shnupbups",
                "Specification-Version"   : "${mod_version}",
                "Implementation-Title"    : "${mod_id}-forge",
                "Implementation-Version"  : project.version_meta,
                "Implementation-Vendor"   : "LimonBlaze",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs"            : "${mod_id}.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')

tasks.jarJar.setClassifier('')
tasks.jarJar.finalizedBy('reobfJarJar')

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifactId = archivesBaseName
			fg.component(it)
			jarJar.component(it)
		}
	}
	repositories {
		mavenLocal()
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 17
}
